openapi: 3.0.0
info:
  title: MCP Gateway Connector API
  version: 1.0.0
  description: |
    HTTP API specification for MCP Gateway connectors.
    Connectors can be implemented in any language and must conform to this API.

servers:
  - url: http://localhost:{port}
    variables:
      port:
        default: '8080'
        description: Connector HTTP port

paths:
  /info:
    get:
      summary: Get connector information
      operationId: getInfo
      responses:
        '200':
          description: Connector information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorInfo'

  /tools:
    get:
      summary: List available tools
      operationId: listTools
      responses:
        '200':
          description: List of tools
          content:
            application/json:
              schema:
                type: object
                properties:
                  tools:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tool'

  /tools/{toolName}/execute:
    post:
      summary: Execute a tool
      operationId: executeTool
      parameters:
        - name: toolName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                arguments:
                  type: object
                  description: Tool-specific arguments
      responses:
        '200':
          description: Tool execution result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolResult'
        '400':
          description: Invalid arguments
        '404':
          description: Tool not found
        '500':
          description: Execution error

  /resources:
    get:
      summary: List available resources
      operationId: listResources
      responses:
        '200':
          description: List of resources
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Resource'

  /resources/{resourceUri}:
    get:
      summary: Read a resource
      operationId: readResource
      parameters:
        - name: resourceUri
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceContent'
        '404':
          description: Resource not found

  /prompts:
    get:
      summary: List available prompts
      operationId: listPrompts
      responses:
        '200':
          description: List of prompts
          content:
            application/json:
              schema:
                type: object
                properties:
                  prompts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Prompt'

  /prompts/{promptName}:
    get:
      summary: Get a prompt
      operationId: getPrompt
      parameters:
        - name: promptName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Prompt details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptDetail'
        '404':
          description: Prompt not found

components:
  schemas:
    ConnectorInfo:
      type: object
      required:
        - name
        - version
        - description
      properties:
        name:
          type: string
          example: "example-connector"
        version:
          type: string
          example: "1.0.0"
        description:
          type: string
          example: "Example connector for demonstration"
        capabilities:
          type: object
          properties:
            tools:
              type: boolean
              default: true
            resources:
              type: boolean
              default: true
            prompts:
              type: boolean
              default: true

    Tool:
      type: object
      required:
        - name
        - description
        - inputSchema
      properties:
        name:
          type: string
          example: "search"
        description:
          type: string
          example: "Search for items"
        inputSchema:
          type: object
          description: JSON Schema for tool arguments

    ToolResult:
      type: object
      required:
        - content
      properties:
        content:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [text, image, resource]
              text:
                type: string
              mimeType:
                type: string
              data:
                type: string
                format: base64
              resource:
                $ref: '#/components/schemas/Resource'
        isError:
          type: boolean
          default: false

    Resource:
      type: object
      required:
        - uri
        - name
      properties:
        uri:
          type: string
          example: "file:///path/to/resource"
        name:
          type: string
          example: "example.txt"
        description:
          type: string
        mimeType:
          type: string
          example: "text/plain"

    ResourceContent:
      type: object
      required:
        - uri
        - mimeType
      properties:
        uri:
          type: string
        mimeType:
          type: string
        text:
          type: string
        blob:
          type: string
          format: base64

    Prompt:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          example: "code-review"
        description:
          type: string
          example: "Generate a code review"
        arguments:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: boolean

    PromptDetail:
      allOf:
        - $ref: '#/components/schemas/Prompt'
        - type: object
          required:
            - messages
          properties:
            messages:
              type: array
              items:
                type: object
                properties:
                  role:
                    type: string
                    enum: [system, user, assistant]
                  content:
                    type: string